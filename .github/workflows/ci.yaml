name: Build and Release Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '23'

    - name: Install Angular CLI
      run: npm install -g @angular/cli

    - name: Install dependencies
      run: npm install

    - name: Electron Build for Linux
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: npm run dist

    - name: Upload Linux Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-build-artifacts-linux
        path: dist-electron/

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '23'

    - name: Install Angular CLI
      run: npm install -g @angular/cli

    - name: Install dependencies
      run: npm install

    - name: Electron Build for Windows
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: npm run dist

    - name: Upload Windows Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-build-artifacts-windows
        path: dist-electron/

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Linux Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: electron-build-artifacts-linux
        path: dist-electron/

    - name: Download Windows Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: electron-build-artifacts-windows
        path: dist-electron/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-electron/MyAngularApp-0.0.0.AppImage
        asset_name: MyAngularApp-0.0.0.AppImage
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-electron/MyAngularApp-0.0.0.exe
        asset_name: MyAngularApp-0.0.0.exe
        asset_content_type: application/octet-stream
