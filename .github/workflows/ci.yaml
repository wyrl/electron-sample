name: Build and Release Electron App

env:
  VERSION: 1.0.1

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/ci.yaml'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "23"

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install dependencies
        run: npm install

      - name: Electron Build for Windows
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run dist

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-artifacts-windows
          path: dist-electron/

  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-build-artifacts-windows
          path: dist-electron/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "dist-electron/MyAngularApp Setup ${{ env.VERSION }}.exe"
          asset_name: MyAngularApp-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
